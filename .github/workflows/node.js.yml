# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: bus-orel-backend

on:
  push:
    branches: [ "master" ]

jobs:
  build:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20.17.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    env:
      MONGODB_HOST: ${{secrets.MONGODB_HOST}} 
      MONGODB_PORT: ${{secrets.MONGODB_PORT}} 
      PORT: ${{secrets.PORT}}

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Create .env file
      run: |
        touch .env
        echo "MONGODB_HOST=${{secrets.MONGODB_HOST}}" >> .env
        echo "MONGODB_PORT=${{secrets.MONGODB_PORT}}" >> .env
        echo "MONGODB_DATABASE_NAME=${{secrets.MONGODB_DATABASE_NAME}}" >> .env
        echo "PORT=${{secrets.PORT}}" >> .env
        echo "JWT_KEY=${{secrets.JWT_KEY}}" >> .env
        echo "SITE_HOST=${{secrets.SITE_HOST}}" >> .env
        echo "AWS_ACCESS_KEY=${{secrets.AWS_ACCESS_KEY}}" >> .env
        echo "AWS_SECRET_KEY=${{secrets.AWS_SECRET_KEY}}" >> .env
        echo "AWS_S3_REGION=${{secrets.AWS_S3_REGION}}" >> .env
        echo "AWS_S3_ENDPOINT=${{secrets.AWS_S3_ENDPOINT}}" >> .env
        echo "AWS_S3_BUCKET=${{secrets.AWS_S3_BUCKET}}" >> .env
    - run: npm ci
    - run: npm run build --if-present
    - run: pm2 restart backend
